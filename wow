#!/bin/bash

set -euo pipefail

msg() {
    echo -e "[+] ${1-}" >&2
}

die() {
    echo -e "[!] ${1-}" >&2
    exit 1
}

check_depends() {
    depends=(wine wineboot winetricks winepath winecfg wineserver curl)
    for dep in ${depends[@]}; do
        if ! command -v "$dep" >/dev/null 2>&1; then
            die "Missing $dep"
        fi
    done
}

export_env_variables() {
    export REGFILE="/usr/share/doc/worldofwarcraft/worldofwarcraft.reg"
    export CACHE_DIR="$HOME/.cache/worldofwarcraft"

    export WINEARCH=win64
    export WINEDLLOVERRIDES="mscoree,mshtml=;winemenubuilder.exe="
    export WINE_REQ_MOD=(win10 arial dxvk)
    export WINEPREFIX="$HOME/.local/share/worldofwarcraft"
    export INSTALL_DIR="$WINEPREFIX/drive_c/Program Files (x86)/Battle.net"
    export CLIENT_EXE="$INSTALL_DIR/Battle.net.exe"

    export DXVK_HUD=fps
    export DXVK_LOG_LEVEL=none
    export DXVK_STATE_CACHE_PATH="$WINEPREFIX"
    export STAGING_SHARED_MEMORY=1
    export __GL_SHADER_DISK_CACHE=1
    export __GL_SHADER_DISK_CACHE_PATH="$WINEPREFIX"
}

create_wineprefix() {
    if [ -e "$WINEPREFIX" ]; then
        die "Wineprefix $WINEPREFIX already exists"
    fi

    msg "Creating wineprefix: $WINEPREFIX"
    mkdir -p "$WINEPREFIX"
    wineboot --init >/dev/null 2>&1
    msg "Installing winetricks verbs: ${WINE_REQ_MOD[*]}"
    winetricks -q --optout "${WINE_REQ_MOD[@]}" >/dev/null 2>&1
    msg "Modifying WINE registry with $REGFILE"
    regedit "$REGFILE" >/dev/null 2>&1
    msg "Waiting for wine processes..."
    wineserver --wait
    msg "Wineprefix created: $WINEPREFIX"
}

uninstall_WoW() {
    msg "Uninstalling World of Warcraft..."
    set +e
    rm -rf "$CACHE_DIR" "$WINEPREFIX"

    # clean up menu entries
    rm -rf \
        ~/.config/menus/applications-merged/*-Battle.net* \
        ~/.config/menus/applications-merged/*-World\ of\ Warcraft* \
        ~/.local/share/applications/wine/Programs/Battle.net \
        ~/.local/share/applications/wine/Programs/World\ of\ Warcraft \
        ~/.local/share/desktop-directories/*-Battle.net.directory
        ~/.local/share/desktop-directories/*-World\ of\ Warcraft.directory
    find -H ~/.config/menus/applications-merged -empty -delete
    find -H ~/.config/menus -empty -delete
    find -H ~/.local/share/applications/wine/Programs -empty -delete
    find -H ~/.local/share/applications/wine -empty -delete
    find -H ~/.local/share/applications -empty -delete
    set -e
}

install_WoW() {
    if [ ! -d "$WINEPREFIX" ]; then
        create_wineprefix
    elif [ -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game has been installed. Remove it and reinstall? [Y/n] "
            read remove
            remove="$(echo "$remove" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${remove##y*}" ]; then
                rm -rf "$INSTALL_DIR"
                break
            elif [ -z "${remove##n*}" ]; then
                exit 1
            fi
        done
    fi

    INSTALLER="$CACHE_DIR/installer.exe"
    INSTALLER_URL="https://us.battle.net/download/getInstaller?os=win&installer=World-of-Warcraft-Setup.exe"

    msg "Downloading installer..."
    mkdir -p "$CACHE_DIR"
    curl --silent --show-error -Lo "$INSTALLER" "$INSTALLER_URL"
    msg "Installing World of Warcraft..."
    wine "$INSTALLER" >/dev/null 2>&1
    msg "Waiting for wine processes..."
    wineserver --wait
    msg "The game is installed at $INSTALL_DIR"
}

start_WoW() {
    if [ ! -f "$CLIENT_EXE" ]; then
        while :; do
            echo -n "[!] The game is not installed. Install it? [Y/n] "
            read install
            install="$(echo "$install" | tr '[:upper:]' '[:lower:]')"
            if [ -z "${install##y*}" ]; then
                install_WoW
                break
            elif [ -z "${install##n*}" ]; then
                exit 1
            fi
        done
    fi

    msg "Starting..."
    WIN_CLIENT_EXE="$(winepath -w "$CLIENT_EXE" 2>/dev/null | \
                      sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
    wine "$WIN_CLIENT_EXE" #>/dev/null 2>&1
    wineserver --wait
    wait
}

usage() {
    cat <<EOF
[!] Usage: $(basename "${BASH_SOURCE[0]}") <command>

World of Warcraft - helper program

Commands:
    start               - Start WoW
    install             - Install WoW
    uninstall           - Uninstall WoW
    reinstall           - Reinstall WoW
    kill                - Kill the wine processes of the wineprefix
    run <shell comamnd> - Run shell command with environment variables
                          (useful for wine utilities)
EOF
}

main() {
    check_depends
    export_env_variables

    cmd="$1"
    shift

    case "$cmd" in
        start)
            start_WoW
            ;;
        install)
            install_WoW
            ;;
        uninstall)
            uninstall_WoW
            ;;
        reinstall)
            uninstall_WoW
            install_WoW
            ;;
        kill)
            wineserver --kill
            ;;
        run)
            $@
            ;;
        *)
            usage
            ;;
    esac
}


main $@

# vim: set ts=4 sw=4 et:
